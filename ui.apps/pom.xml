<?xml version="1.0" encoding="UTF-8"?>
<!-- | Copyright 2015 Adobe Systems Incorporated | | Licensed under the Apache 
	License, Version 2.0 (the "License"); | you may not use this file except 
	in compliance with the License. | You may obtain a copy of the License at 
	| | http://www.apache.org/licenses/LICENSE-2.0 | | Unless required by applicable 
	law or agreed to in writing, software | distributed under the License is 
	distributed on an "AS IS" BASIS, | WITHOUT WARRANTIES OR CONDITIONS OF ANY 
	KIND, either express or implied. | See the License for the specific language 
	governing permissions and | limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- ====================================================================== -->
	<!-- P A R E N T P R O J E C T D E S C R I P T I O N -->
	<!-- ====================================================================== -->
	<parent>
		<groupId>com.shinesolutions</groupId>
		<artifactId>aemwebpack</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<!-- ====================================================================== -->
	<!-- P R O J E C T D E S C R I P T I O N -->
	<!-- ====================================================================== -->
	<artifactId>aemwebpack.ui.apps</artifactId>
	<packaging>content-package</packaging>
	<name>AEM Webpack - UI apps</name>
	<description>UI apps package for AEM Webpack</description>

	<!-- ====================================================================== -->
	<!-- B U I L D D E F I N I T I O N -->
	<!-- ====================================================================== -->
	<build>
		<resources>
			<!-- define the resources that will go into the package -->
			<resource>
				<!-- we want to keep some of the META-INF files and not configure everything 
					in the plugin. -->
				<directory>${basedir}/src/main/content/META-INF</directory>
				<targetPath>../vault-work/META-INF</targetPath>
			</resource>
			<resource>
				<directory>${basedir}/src/main/content/jcr_root</directory>
				<excludes>
					<!-- exclude .vlt control files in the package -->
					<exclude>**/.vlt</exclude>
					<exclude>**/.vltignore</exclude>
					<exclude>**/.gitignore</exclude>
					<exclude>**/*.iml</exclude>
					<exclude>**/.classpath</exclude>
					<exclude>**/.project</exclude>
					<exclude>**/.settings</exclude>
					<exclude>**/.DS_Store</exclude>
					<exclude>**/target/**</exclude>
					<exclude>**/pom.xml</exclude>
					<exclude>libs/</exclude>
					<exclude>**/etc/designs/aemwebpack/_dev-resources</exclude>
					<exclude>**/etc/designs/aemwebpack/index.html</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>
            <plugin>
                <!-- Maven Clean Plugin -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>ui.apps/src/frontend/coverage</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
			<!-- we want to keep some of the META-INF files and not configure everything 
				in the plugin (mainly the filters). copy the resource explicitly instead 
				of attaching it to the default resources -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<!-- ensure that the empty directories are copied -->
				<configuration>
					<includeEmptyDirs>true</includeEmptyDirs>
				</configuration>

				<executions>
					<execution>
						<id>copy-metainf-vault-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/vault-work/META-INF</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/META-INF</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--<plugin>-->
				<!--<groupId>org.codehaus.mojo</groupId>-->
				<!--<artifactId>jslint-maven-plugin</artifactId>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<goals>-->
							<!--<goal>jslint</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
				<!--<configuration>-->
					<!--<sourceJsFolder>src/main/content/jcr_root</sourceJsFolder>-->
					<!--<failOnIssues>true</failOnIssues>-->
					<!--<predefinedVars>jQuery,window,$,use,properties,pageProperties,inheritedPageProperties,component,componentContext,currentDesign,currentNode,currentPage,currentSession,currentStyle,designer,editContext,log,out,pageManager,reader,request,resource,resourceDesign,resourcePage,response,sling,slyWcmHelper,wcmmode,xssAPI</predefinedVars>-->
					<!--<excludes>-->
						<!--<exclude>**/extensions/**/*.js</exclude>-->
						<!--<exclude>**/vendor/**/*.js</exclude>-->
					<!--</excludes>-->
				<!--</configuration>-->
			<!--</plugin>-->

			<!-- ====================================================================== -->
			<!-- V A U L T P A C K A G E P L U G I N -->
			<!-- ====================================================================== -->
			<plugin>
				<groupId>com.day.jcr.vault</groupId>
				<artifactId>content-package-maven-plugin</artifactId>
				<version>0.0.24</version>
				<extensions>true</extensions>
				<configuration>
					<filterSource>${basedir}/src/main/content/META-INF/vault/filter.xml</filterSource>
					<verbose>false</verbose>
					<failOnError>true</failOnError>
					<group>aemwebpack</group>

					<embeddeds>
						<embedded>
							<groupId>com.shinesolutions</groupId>
							<artifactId>aemwebpack.core</artifactId>
							<target>/apps/aemwebpack/install</target>
						</embedded>
					</embeddeds>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.6</version>
				<configuration>
					<installDirectory>./src/frontend</installDirectory>
					<workingDirectory>./src/frontend</workingDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install node and yarn</id>
						<goals>
							<goal>install-node-and-yarn</goal>
						</goals>
						<configuration>
							<nodeVersion>v8.9.4</nodeVersion>
							<!--<npmVersion>5.6.0</npmVersion>-->
							<yarnVersion>v1.7.0</yarnVersion>
						</configuration>
					</execution>

                    <execution>
                        <id>yarn install node-gyp</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <arguments>global add node-gyp</arguments>
                        </configuration>
                    </execution>

					<execution>
						<id>yarn install</id>
						<goals>
							<goal>yarn</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- ====================================================================== -->
	<!-- P R O F I L E S -->
	<!-- ====================================================================== -->
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<installDirectory>./src/frontend</installDirectory>
							<workingDirectory>./src/frontend</workingDirectory>
						</configuration>
						<executions>
							<!-- This execution creates app clientlib folder with all the webpack bundles js, css, and fonts -->
							<execution>
								<id>webpack build</id>
								<goals>
									<goal>yarn</goal>
								</goals>
								<configuration>
									<!-- must ignore mvn proxy at this stage, otherwise webpack throws an error about unknown proxy parameter -->
									<yarnInheritsProxyConfigFromMaven>false</yarnInheritsProxyConfigFromMaven>
									<arguments>run build</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>test</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<installDirectory>./src/frontend</installDirectory>
							<workingDirectory>./src/frontend</workingDirectory>
						</configuration>
						<executions>
                            <execution>
                                <phase>test</phase>
                                <id>yarn test</id>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>
                                <configuration>
                                    <yarnInheritsProxyConfigFromMaven>false</yarnInheritsProxyConfigFromMaven>
                                    <arguments>test</arguments>
                                </configuration>
                            </execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>coverage</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<installDirectory>./src/frontend</installDirectory>
							<workingDirectory>./src/frontend</workingDirectory>
						</configuration>
						<executions>
                            <execution>
                                <phase>test</phase>
                                <id>yarn test:coverage</id>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>
                                <configuration>
                                    <yarnInheritsProxyConfigFromMaven>false</yarnInheritsProxyConfigFromMaven>
                                    <arguments>test:coverage</arguments>
                                </configuration>
                            </execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>production</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<installDirectory>./src/frontend</installDirectory>
							<workingDirectory>./src/frontend</workingDirectory>
						</configuration>
						<executions>
							<!-- This execution creates app clientlib folder with all the webpack bundles js, css, and fonts -->
							<execution>
								<id>webpack build</id>
								<goals>
									<goal>yarn</goal>
								</goals>
								<configuration>
									<!-- must ignore mvn proxy at this stage, otherwise webpack throws an error about unknown proxy parameter -->
									<yarnInheritsProxyConfigFromMaven>false</yarnInheritsProxyConfigFromMaven>
									<arguments>run build:production</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>autoInstallPackage</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.day.jcr.vault</groupId>
						<artifactId>content-package-maven-plugin</artifactId>
						<version>0.0.24</version>
						<executions>
							<execution>
								<id>install-package</id>
								<goals>
									<goal>install</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<targetURL>http://${aem.host}:${aem.port}/crx/packmgr/service.jsp</targetURL>
							<failOnError>true</failOnError>
							<failOnMissingEmbed>true</failOnMissingEmbed>
							<useProxy>false</useProxy>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>autoInstallPackagePublish</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.day.jcr.vault</groupId>
						<artifactId>content-package-maven-plugin</artifactId>
						<version>0.0.24</version>
						<executions>
							<execution>
								<id>install-package</id>
								<goals>
									<goal>install</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<targetURL>http://${aem.publish.host}:${aem.publish.port}/crx/packmgr/service.jsp</targetURL>
							<failOnError>true</failOnError>
							<failOnMissingEmbed>true</failOnMissingEmbed>
							<useProxy>false</useProxy>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<!-- ====================================================================== -->
	<!-- D E P E N D E N C I E S -->
	<!-- ====================================================================== -->
	<dependencies>
		<dependency>
			<groupId>com.shinesolutions</groupId>
			<artifactId>aemwebpack.core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.adobe.aem</groupId>
			<artifactId>uber-jar</artifactId>
			<version>6.2.0-SP1</version>
			<scope>provided</scope>
			<classifier>apis</classifier>
		</dependency>
		<dependency>
			<groupId>javax.jcr</groupId>
			<artifactId>jcr</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.day.cq.wcm</groupId>
			<artifactId>cq-wcm-taglib</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.scripting.jsp.taglib</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
		</dependency>
		<dependency>
			<groupId>com.adobe.acs</groupId>
			<artifactId>acs-aem-commons-bundle</artifactId>
		</dependency>
		<dependency>
			<groupId>com.adobe.acs</groupId>
			<artifactId>acs-aem-commons-content</artifactId>
			<type>content-package</type>
		</dependency>
	</dependencies>
</project>
